<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="dist/backend/server.js" verb="*" modules="iisnode" />
    </handlers>
    <rewrite>
      <rules>
        <!-- REGOLA 1 (Priorità Altissima): Servire il manifest.webmanifest dalla cartella 'dist' -->
        <rule name="Serve Manifest from Dist" stopProcessing="true">
          <match url="^manifest\.webmanifest$" ignoreCase="true" />
          <conditions logicalGrouping="MatchAll">
            <!-- Verifica se il manifest.webmanifest esiste fisicamente in C:\Users\clama\dyad-apps\manutenzioni1\dist -->
            <add input="C:\Users\clama\dyad-apps\manutenzioni1\dist\manifest.webmanifest" matchType="IsFile" />
          </conditions>
          <action type="Rewrite" url="/dist/manifest.webmanifest" />
        </rule>

        <!-- REGOLA 2 (Priorità molto alta): Servire TUTTI gli altri asset statici dalla cartella 'dist' (es. /assets/JS, CSS, etc.) -->
        <rule name="Serve All Other Static Assets from Dist" stopProcessing="true">
          <match url="^(.+)\.(js|css|html|ico|png|svg|json|map|txt|webmanifest)$" ignoreCase="true" />
          <conditions logicalGrouping="MatchAll">
            <add input="C:\Users\clama\dyad-apps\manutenzioni1\dist\{R:0}" matchType="IsFile" />
          </conditions>
          <action type="Rewrite" url="/dist/{R:0}" />
        </rule>

        <!-- REGOLA 3 (Serve SPA Frontend Root) -->
        <rule name="Serve SPA Frontend Root" stopProcessing="true">
          <match url="^$" />
          <action type="Rewrite" url="/dist/index.html" />
        </rule>

        <!-- REGOLA 4 (Serve SPA Client Routes) -->
        <rule name="Serve SPA Frontend Client Routes" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            <add input="{REQUEST_URI}" pattern="^/api" negate="true" />
          </conditions>
          <action type="Rewrite" url="/dist/index.html" />
        </rule>

        <!-- REGOLA 5 (NodeInspector) -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^dist\/backend\/server.js\/debug[\/]?([0-9]+)?$" />
        </rule>
        
        <!-- REGOLA 6 (PassToNodeJsBackend) -->
        <rule name="PassToNodeJsBackend">
          <match url=".*" />
          <conditions>
              <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
              <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
              <add input="{REQUEST_URI}" pattern="^/api" />
          </conditions>
          <action type="Rewrite" url="dist/backend/server.js" />
        </rule>
      </rules>
    </rewrite>
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules" />
          <add segment="iisnode" />
        </hiddenSegments>
      </requestFiltering>
    </security>
    <iisnode
      node_env="production"
      nodeProcessCommandLine="&quot;%programfiles%\nodejs\node.exe&quot;"
      loggingEnabled="true"
      logDirectory="iisnode"
      stdoutEnabled="true"
      watchedFiles="*.js;iisnode.yml"
      maxConcurrentRequestsPerProcess="1024"
      maxNamedPipeConnectionRetry="200"
      namedPipeConnectionRetryDelay="250"
      maxNamedPipeConnectionPoolSize="512"
      initialRequestBufferSize="4096"
      maxRequestBufferSize="65536"
      uncFileChangesPollingInterval="5000"
      gracefulShutdownTimeout="60000"
      asyncCompletionThreadCount="0"
      maxLogFileSizeInKB="128"
      devErrorsEnabled="true"
      flushResponse="false"
      enableXFF="false"
      promoteServerVars="ALL"
      configOverrides="iisnode.yml"
    />
  </system.webServer>
</configuration>