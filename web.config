<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <handlers>
      <clear /> 
      <add name="iisnodeBackendHandler" path="dist/backend/server.js" verb="*" modules="iisnode" resourceType="File" requireAccess="Execute" />
      <add name="StaticFileHandler" path="*" verb="*" modules="StaticFileModule" resourceType="File" requireAccess="Read" />
    </handlers>
    
    <!-- === LA SEZIONE <staticContent> Ãˆ RIPRISTINATA QUI E DEFINISCE I MIME TYPES === -->
    <staticContent>
      <clear /> <!-- Rimuove tutti i mimeMap ereditati per partire da una lavagna pulita -->
      <mimeMap fileExtension=".webmanifest" mimeType="application/manifest+json" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <mimeMap fileExtension=".css" mimeType="text/css" />
      <mimeMap fileExtension=".png" mimeType="image/png" />
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
      <mimeMap fileExtension=".json" mimeType="application/json" /> 
      <mimeMap fileExtension=".html" mimeType="text/html" /> <!-- Aggiungiamo anche HTML per sicurezza -->
    </staticContent>
    <!-- ========================================================================================= -->

    <rewrite>
      <rules>
        <rule name="PassToNodeJsBackend" stopProcessing="true">
          <match url="^api/(.*)" />
          <action type="Rewrite" url="/dist/backend/server.js" appendQueryString="true" />
        </rule>

        <rule name="Serve Manifest from Dist Root" stopProcessing="true">
          <match url="^manifest\.webmanifest$" ignoreCase="true" />
          <conditions logicalGrouping="MatchAll">
            <add input="C:\Users\clama\dyad-apps\manutenzioni1\dist\manifest.webmanifest" matchType="IsFile" />
          </conditions>
          <action type="Rewrite" url="/dist/manifest.webmanifest" />
        </rule>

        <rule name="Serve PWA Icons from Dist Root" stopProcessing="true">
          <match url="^(pwa-(192|512)x(192|512)\.png)$" ignoreCase="true" />
          <conditions logicalGrouping="MatchAll">
            <add input="C:\Users\clama\dyad-apps\manutenzioni1\dist\{R:0}" matchType="IsFile" />
          </conditions>
          <action type="Rewrite" url="/dist/{R:0}" />
        </rule>

        <rule name="Serve RegisterSW from Dist Root" stopProcessing="true">
          <match url="^registerSW\.js$" ignoreCase="true" />
          <conditions logicalGrouping="MatchAll">
            <add input="C:\Users\clama\dyad-apps\manutenzioni1\dist\registerSW.js" matchType="IsFile" />
          </conditions>
          <action type="Rewrite" url="/dist/registerSW.js" />
        </rule>

        <rule name="Serve Assets Subfolder from Dist" stopProcessing="true">
          <match url="^assets/(.+)\.(js|css|html|ico|png|svg|json|map|txt|webmanifest)$" ignoreCase="true" />
          <conditions logicalGrouping="MatchAll">
            <add input="C:\Users\clama\dyad-apps\manutenzioni1\dist\assets\{R:1}.{R:2}" matchType="IsFile" />
          </conditions>
          <action type="Rewrite" url="/dist/assets/{R:1}.{R:2}" />
        </rule>

        <rule name="Serve SPA Frontend Root" stopProcessing="true">
          <match url="^$" />
          <action type="Rewrite" url="/dist/index.html" />
        </rule>

        <rule name="Serve SPA Frontend Client Routes" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            <add input="{REQUEST_URI}" pattern="^/api" negate="true" />
          </conditions>
          <action type="Rewrite" url="/dist/index.html" />
        </rule>

        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^dist\/backend\/server.js\/debug[\/]?([0-9]+)?$" />
        </rule>
        
      </rules>
    </rewrite>
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules" />
          <add segment="iisnode" />
        </hiddenSegments>
      </requestFiltering>
    </security>
    <iisnode node_env="production" 
             nodeProcessCommandLine="&quot;%programfiles%\nodejs\node.exe&quot;" 
             loggingEnabled="true" 
             logDirectory="iisnode" 
             stdoutEnabled="true" 
             watchedFiles="*.js;iisnode.yml" 
             maxConcurrentRequestsPerProcess="1024" 
             maxNamedPipeConnectionRetry="200" 
             namedPipeConnectionRetryDelay="250" 
             maxNamedPipeConnectionPoolSize="512" 
             initialRequestBufferSize="4096" 
             maxRequestBufferSize="65536" 
             uncFileChangesPollingInterval="5000" 
             gracefulShutdownTimeout="60000" 
             asyncCompletionThreadCount="0" 
             maxLogFileSizeInKB="128" 
             devErrorsEnabled="true" 
             flushResponse="false" 
             enableXFF="false" 
             promoteServerVars="ALL" 
             configOverrides="iisnode.yml">
      <environmentVariables>
        <add name="SUPABASE_URL" value="https://ntelzdfffqlvxcmqffld.supabase.co" />
        <add name="SUPABASE_SERVICE_ROLE_KEY" value="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im50ZWx6ZGZmZnFsdnhjbXFmZmxkIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MTA2NzYzMSwiZXhwIjoyMDc2NjQzNjMxfQ.RRNjGz5BO-g9Wji0Ebg7qZgLwVhbBuGyr5jCm7tbzRk" />
      </environmentVariables>
    </iisnode>
  </system.webServer>
</configuration>